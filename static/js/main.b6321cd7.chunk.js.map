{"version":3,"sources":["articles/america.html","articles/asia.html","data.js","NavBar.js","Map.js","MapDebug.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DATA","id","x","y","html","require","NavBar","classes","this","props","react_default","a","createElement","index_es","className","root","position","color","Toolbar_default","Typography_default","variant","IconButton_default","Close_default","Component","withStyles","theme","zIndex","drawer","Map","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","container","React","createRef","state","drawerOpen","selectedHtml","canvasHovered","navigateTo","point","target","OpenSeadragon","Point","viewer","viewport","zoomTo","panTo","setState","makeMarkerClickHandler","event","preventDefault","stopPropagation","history","push","createOverlaysFromData","map","locationMarker","onClick","aria-label","LocationOn_default","style","fontSize","yellow","cursor","locationMarkerContainer","document","ReactDOM","render","objectSpread","placement","Placement","CENTER","element","onDrawerClose","onCanvasEnter","onCanvasLeave","inherits","createClass","key","value","_this2","current","prefixUrl","process","tileSources","overlays","zoomPerClick","zoomInButton","zoomOutButton","homeButton","minZoomLevel","match","params","find","setTimeout","prevProps","_this$props","width","Fragment","ref","mapContainer","isWidthUp","onMouseEnter","onMouseLeave","buttons","opacity","Tooltip_default","title","actionButton","ZoomIn_default","icon","ZoomOut_default","ZoomOutMap_default","Drawer_default","anchor","open","onClose","BackdropProps","invisible","paper","drawerPaper","dangerouslySetInnerHTML","__html","flow","withWidth","defineProperty","display","alignItems","justifyContent","appBar","margin","transition","transitions","create","background","&:hover","height","marginTop","breakpoints","up","withTheme","MapDebug","createMuiTheme","typography","fontFamily","App","core_styles","src_NavBar","HashRouter","hashType","Switch","Route","exact","path","component","Boolean","window","location","hostname","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6321cd7.chunk.js","sourcesContent":["module.exports = \"<h1>America</h1>\\n<p>Test</p>\\n<a href=\\\"#asia\\\">Go to asia</a>\\n<img src=\\\"favicon.ico\\\"/>\\n\";","module.exports = \"<h1>Asia</h1>\\n<p>abc 123</p>\\n<img src=\\\"favicon.ico\\\"/>\\n\";","export const DATA = [\n  {\n    id: 'america',\n    x: 0.2,\n    y: 0.2,\n    html: require('./articles/america.html'),\n  },\n  { id: 'asia',\n    x: 0.5,\n    y: 0.5,\n    html: require('./articles/asia.html'),\n  },\n]\n","import {AppBar, withStyles} from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton/IconButton'\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar'\nimport Typography from '@material-ui/core/Typography/Typography'\nimport Close from '@material-ui/icons/Close'\nimport React, {Component} from 'react'\n\nconst styles = (theme) => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n})\n\nexport const headerHeight = 64\n\nclass NavBar extends Component {\n  render() {\n    const {classes} = this.props\n    return (\n      <AppBar className={classes.root} position={'absolute'} color={'default'}>\n        <Toolbar>\n          <Typography variant={'h4'}>Amerasia</Typography>\n          <IconButton><Close/></IconButton>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nexport default withStyles(styles)(NavBar)\n","import {withStyles, withWidth} from '@material-ui/core'\nimport {yellow} from '@material-ui/core/colors'\nimport Drawer from '@material-ui/core/Drawer/Drawer'\nimport IconButton from '@material-ui/core/IconButton/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip'\nimport {isWidthUp} from '@material-ui/core/withWidth'\nimport LocationOn from '@material-ui/icons/LocationOn'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport ZoomOut from '@material-ui/icons/ZoomOut'\nimport ZoomOutMap from '@material-ui/icons/ZoomOutMap'\nimport {find, flow} from 'lodash'\nimport OpenSeadragon from 'openseadragon'\nimport React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport {DATA} from './data'\nimport {headerHeight} from './NavBar'\n\nconst drawerWidth = 500\n\nconst styles = (theme) => ({\n  buttons: {\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    // marginTop: headerHeight + theme.spacing.unit,\n    zIndex: theme.zIndex.appBar,\n  },\n  actionButton: {\n\n    margin: 4,\n    transition: theme.transitions.create(['background']),\n    background: 'rgba(255, 255, 255, 0.7)',\n    '&:hover': {\n      background: 'rgba(255, 255, 255, 1)',\n    }\n  },\n  icon: {\n    width: 20,\n    height: 20,\n  },\n  drawerPaper: {\n    width: '100vw',\n    height: '50vh',\n    marginTop: 0,\n  },\n  mapContainer: {\n    width: `100vw`,\n    height: '50vh',\n  },\n\n  // Large screens\n  [theme.breakpoints.up('sm')]: {\n    drawerPaper: {\n      marginTop: headerHeight,\n      width: drawerWidth,\n      height: '100vh',\n    },\n    mapContainer: {\n      height: `calc(100vh - ${headerHeight}px)`,\n      marginTop: headerHeight,\n      transition: theme.transitions.create(['width'])\n    },\n  },\n})\n\nexport class Map extends Component {\n  container = React.createRef()\n\n  state = {\n    drawerOpen: false,\n    selectedHtml: '',\n    canvasHovered: false,\n  }\n\n  componentDidMount() {\n    this.viewer = OpenSeadragon({\n      element: this.container.current,\n      prefixUrl: `${process.env.PUBLIC_URL}/tiles_files/`,\n      tileSources: `${process.env.PUBLIC_URL}/tiles.dzi`,\n      overlays: this.createOverlaysFromData(),\n      zoomPerClick: 1.5, // disable zoom on click\n      zoomInButton: 'zoom-in-button',\n      zoomOutButton: 'zoom-out-button',\n      homeButton: 'home-button',\n    })\n    this.viewer.viewport.minZoomLevel = 0.5\n\n    if (this.props.match.params.id) {\n      const point = find(DATA, {id: this.props.match.params.id})\n      if (point) {\n        setTimeout(() => this.navigateTo(point), 700)\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      const point = find(DATA, {id: this.props.match.params.id})\n      if (point) {\n        this.navigateTo(point)\n      }\n    }\n  }\n\n  navigateTo = (point) => {\n    const target = new OpenSeadragon.Point(point.x, point.y)\n    this.viewer.viewport.zoomTo(2, target)\n    this.viewer.viewport.panTo(target)\n    this.setState({\n      drawerOpen: true,\n      selectedHtml: point.html,\n    })\n  }\n\n\n  makeMarkerClickHandler = (point) => (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    this.props.history.push(point.id)\n  }\n\n  createOverlaysFromData = () => {\n    return DATA.map((point) => {\n      const locationMarker = (\n        <IconButton id={point.id} onClick={this.makeMarkerClickHandler(point)} aria-label={point.id}>\n          <LocationOn style={{fontSize: '1.2em', color: yellow[400], cursor: 'pointer'}}/>\n        </IconButton>\n      )\n\n      const locationMarkerContainer = document.createElement('div')\n      ReactDOM.render(locationMarker, locationMarkerContainer)\n      return ({\n        ...point,\n        placement: OpenSeadragon.Placement.CENTER,\n        element: locationMarkerContainer,\n      })\n    })\n  }\n\n  onDrawerClose = () => {\n    this.setState({drawerOpen: false})\n  }\n\n  onCanvasEnter = () => {\n    this.setState({canvasHovered: true})\n  }\n\n  onCanvasLeave = () => {\n    this.setState({canvasHovered: false})\n  }\n\n  render() {\n    const {classes, width} = this.props\n    return (\n      <>\n        <div\n          ref={this.container}\n          id={'test'}\n          className={classes.mapContainer}\n          style={{\n            width: isWidthUp('sm', width) && this.state.drawerOpen\n              ? `calc(100vw - ${drawerWidth}px`\n              : '100vw'\n          }}\n          onMouseEnter={this.onCanvasEnter}\n          onMouseLeave={this.onCanvasLeave}\n        >\n          <div className={classes.buttons} style={{opacity: this.state.canvasHovered ? 1 : 0}}>\n            <Tooltip title={'Zoom In'}>\n              <IconButton className={classes.actionButton} id={'zoom-in-button'} aria-label={'zoom-in'}>\n                <ZoomIn className={classes.icon}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={'Zoom Out'}>\n              <IconButton className={classes.actionButton} id={'zoom-out-button'} aria-label={'zoom-out'}>\n                <ZoomOut className={classes.icon}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={'Reset Zoom'}>\n              <IconButton className={classes.actionButton} id={'home-button'} aria-label={'home'}>\n                <ZoomOutMap className={classes.icon}/>\n              </IconButton>\n            </Tooltip>\n          </div>\n        </div>\n        <Drawer\n          variant={'persistent'}\n          anchor={isWidthUp('sm', width) ? 'right' : 'bottom'}\n          open={this.state.drawerOpen}\n          onClose={this.onDrawerClose}\n          BackdropProps={{invisible: true}}\n          classes={{paper: classes.drawerPaper}}\n        >\n          <div dangerouslySetInnerHTML={{__html: this.state.selectedHtml}}/>\n        </Drawer>\n      </>\n    )\n  }\n}\n\nexport default flow([\n  withWidth(),\n  withStyles(styles, {withTheme: true})\n])(Map)\n","import {Typography} from '@material-ui/core'\nimport React, {Component} from 'react'\n\nexport class MapDebug extends Component {\n  render() {\n    return (\n      <>\n        <Typography variant={'h2'}>Amerasia Map</Typography>\n        <Typography variant={'subtitle1'}>Debug Mode</Typography>\n      </>\n    )\n  }\n}\n","import {createMuiTheme} from '@material-ui/core'\nimport \"typeface-crimson-text\"\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: `\"Crimson\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif\"`\n  }\n})\n","import {CssBaseline, MuiThemeProvider} from '@material-ui/core'\nimport React, {Component} from 'react'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport './base.css'\nimport Map from './Map'\nimport {MapDebug} from './MapDebug'\nimport NavBar from './NavBar'\nimport {theme} from './theme'\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <NavBar />\n          <HashRouter hashType={'noslash'}>\n            <Switch>\n              <Route exact path={'/'} component={Map} />\n              {/*TODO: fix*/}\n              <Route path={'/:id'} component={Map} />\n              <Route exact path={'/debug'} component={MapDebug} />\n            </Switch>\n          </HashRouter>\n        </MuiThemeProvider>\n      </>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}