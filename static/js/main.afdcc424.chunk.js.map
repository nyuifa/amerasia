{"version":3,"sources":["ArticleDrawer.js","NavBar.js","Map.js","MapDebug.js","Page.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["ArticleDrawer","_this$props","this","props","classes","children","react_default","a","createElement","Drawer_default","anchor","variant","paper","drawerPaper","Component","withStyles","theme","maxWidth","NavBar","index_es","className","root","position","color","Toolbar_default","Typography_default","zIndex","drawer","Map","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","container","React","createRef","state","drawerOpen","selectedHtml","makeMarkerClickHandler","point","history","push","id","target","OpenSeadragon","Point","x","y","viewer","viewport","zoomTo","panTo","setState","html","generateOverlays","size","fill","map","_","i","pointOptions","Math","random","placement","Placement","CENTER","loremIpsum","count","locationMarker","LocationOn_default","style","fontSize","yellow","cursor","onClick","locationMarkerContainer","document","ReactDOM","render","objectSpread","element","onDrawerClose","inherits","createClass","key","value","current","prefixUrl","process","tileSources","overlays","zoomPerClick","minZoomLevel","Fragment","ref","height","marginTop","width","src_ArticleDrawer","open","onClose","BackdropProps","invisible","dangerouslySetInnerHTML","__html","MapDebug","Page","rest","objectWithoutProperties","assign","overflow","createMuiTheme","typography","fontFamily","App","styles","src_Page","src_NavBar","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.afdcc424.chunk.js","sourcesContent":["import Drawer from '@material-ui/core/Drawer/Drawer'\nimport React, {Component} from 'react'\nimport {withStyles} from '@material-ui/core'\n\nconst styles = (theme) => ({\n  drawerPaper: {\n    maxWidth: 500,\n  }\n})\n\n// TODO: Maybe we don't need this in a separate file\n\nclass ArticleDrawer extends Component {\n  render() {\n    const {classes, children} = this.props\n    return (\n      <Drawer\n        anchor={'right'}\n        variant={'persistent'}\n        classes={{paper: classes.drawerPaper}}\n      >\n        {children}\n      </Drawer>\n    )\n  }\n}\n\nexport default withStyles(styles)(ArticleDrawer)\n","import Toolbar from '@material-ui/core/Toolbar/Toolbar'\nimport Typography from '@material-ui/core/Typography/Typography'\nimport React, {Component} from 'react'\nimport {AppBar, withStyles} from '@material-ui/core'\n\nconst styles = (theme) => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n})\n\nexport const headerHeight = 64\n\nclass NavBar extends Component {\n  render() {\n    const {classes} = this.props\n    return (\n      <AppBar className={classes.root} position={'absolute'} color={'default'}>\n        <Toolbar>\n          <Typography variant={'h4'}>Amerasia</Typography>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nexport default withStyles(styles)(NavBar)\n","import {yellow} from '@material-ui/core/colors'\nimport Dialog from '@material-ui/core/Dialog/Dialog'\nimport Typography from '@material-ui/core/Typography/Typography'\nimport LocationOn from '@material-ui/icons/LocationOn'\nimport loremIpsum from 'lorem-ipsum'\nimport OpenSeadragon from 'openseadragon'\nimport React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport ArticleDrawer from './ArticleDrawer'\nimport {headerHeight} from './NavBar'\n\nexport class Map extends Component {\n  container = React.createRef()\n\n  state = {\n    drawerOpen: true,\n    selectedHtml: '',\n  }\n\n  componentDidMount() {\n    this.viewer = OpenSeadragon({\n      element: this.container.current,\n      prefixUrl: `${process.env.PUBLIC_URL}/tiles_files/`,\n      tileSources: `${process.env.PUBLIC_URL}/tiles.dzi`,\n      overlays: this.generateOverlays(10),\n      zoomPerClick: 1, // disable zoom on click\n    })\n    this.viewer.viewport.minZoomLevel = 0.5\n  }\n\n  makeMarkerClickHandler = (point) => () => {\n    this.props.history.push(point.id)\n    const target = new OpenSeadragon.Point(point.x, point.y)\n    this.viewer.viewport.zoomTo(2, target)\n    this.viewer.viewport.panTo(target)\n    this.setState({\n      drawerOpen: true,\n      selectedHtml: point.html,\n    })\n  }\n\n  generateOverlays = (size) => {\n    return Array(size).fill(0).map((_, i) => {\n\n      const id = `location-marker-${i}`\n      const pointOptions = {\n        id,\n        x: (Math.random() * 0.8) + 0.2,\n        y: (Math.random() * 0.5),\n        placement: OpenSeadragon.Placement.CENTER,\n        html: `\n          <h1 class=\"heading\">Lorem Ipsum</h1>\n          <h2>${id}</h2>\n          <p>${loremIpsum({count: 2})}</p>\n          <image src=\"/favicon.ico\"/>\n        `\n      }\n\n      const locationMarker = <LocationOn\n        id={id}\n        style={{fontSize: '2em', color: yellow[400], cursor: 'pointer'}}\n        onClick={this.makeMarkerClickHandler(pointOptions)}\n      />\n\n      const locationMarkerContainer = document.createElement('div')\n      ReactDOM.render(locationMarker, locationMarkerContainer)\n      return ({\n        ...pointOptions,\n        element: locationMarkerContainer,\n      })\n    })\n  }\n\n  onDrawerClose = () => {\n    this.setState({drawerOpen: false})\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          ref={this.container}\n          id={'test'}\n          style={{\n            height: `calc(100vh - ${headerHeight}px)`,\n            marginTop: headerHeight,\n            width: '100%',\n          }}\n        />\n        <ArticleDrawer\n          open={this.state.drawerOpen}\n          onClose={this.onDrawerClose}\n          BackdropProps={{invisible: true}}\n        >\n          <div dangerouslySetInnerHTML={{__html: this.state.selectedHtml}} />\n        </ArticleDrawer>\n      </>\n    )\n  }\n}\n\n","import {Typography} from '@material-ui/core'\nimport React, {Component} from 'react'\n\nexport class MapDebug extends Component {\n  render() {\n    return (\n      <>\n        <Typography variant={'h2'}>Amerasia Map</Typography>\n        <Typography variant={'subtitle1'}>Debug Mode</Typography>\n      </>\n    )\n  }\n}\n","import {withStyles} from '@material-ui/core'\nimport React, {Component} from 'react'\n\nconst styles = (theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n  },\n})\n\nclass Page extends Component {\n  render() {\n    const {classes, children, ...rest} = this.props\n    return (\n      <div className={classes.root} {...rest}>\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Page)\n\n","import {createMuiTheme} from '@material-ui/core'\nimport \"typeface-crimson-text\"\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: `\"Crimson\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif\"`\n  }\n})\n","import {CssBaseline, MuiThemeProvider} from '@material-ui/core'\nimport React, {Component} from 'react'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport {Map} from './Map'\nimport {MapDebug} from './MapDebug'\nimport NavBar from './NavBar'\nimport Page from './Page'\nimport {theme} from './theme'\nimport './base.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <MuiThemeProvider theme={theme}>\n          <Page>\n            <CssBaseline />\n            <NavBar />\n            <BrowserRouter>\n              <Switch>\n                <Route exact path={'/'} component={Map} />\n                {/*TODO: fix*/}\n                <Route path={'/:id'} component={Map} />\n                <Route exact path={'/debug'} component={MapDebug} />\n              </Switch>\n            </BrowserRouter>\n          </Page>\n        </MuiThemeProvider>\n      </>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}